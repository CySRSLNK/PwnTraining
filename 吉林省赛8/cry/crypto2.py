from Crypto.Util.number import *
import gmpy2
from secret import flag

flag = flag{md5(xor_string(my_cipher,key))}  #将密文和密钥异或的结果进行MD5加密填入flag{}大括号中，即为flag

def xor_strings(s1, s2):
    if len(s1) > len(s2):
        s2 = (s2 * ((len(s1) // len(s2)) + 1))[:len(s1)]
    elif len(s2) > len(s1):
        s1 = (s1 * ((len(s2) // len(s1)) + 1))[:len(s2)]

    result = bytes([a ^ b for a, b in zip(s1, s2)])

    return result

key = b''
my_cipher = b''

p = getPrime(512)
q = getPrime(512)
n1 = p * q
e1 = 52361
m1 = bytes_to_long(key)
c1 = pow(m1,e1,n1)
print(c1)
print(n1)

p = getPrime(512)
n2 = p * q
m = bytes_to_long(b'Tye'*12)
assert (e1<100000)
c2 = pow(m,e1,n2)
print(c2)
print(n2)
#c1 = 39471034823495233131258755952788260872685406899550598966219620439023005190609621793345106909841197367218712915331268797393721000824805551482741263561482875485361603836885387542777283490777694608595621331636732428404988727399422333299466160103130340999800077706853416322168724541535241003166301324304864073601
#n1 = 78087696349687222275967876890620931039429306814000464894702019276899435218954918865109911508885889217657386650116363351472998643441672132215890442080998563762483607079327852867205842975635350134353866027787420399747713910254079198081976234095024153642116114458972375095043372391476029578425808800164905263321
#c2 = 58866340997101309405964584955419273441875177252466772824025637320760018805188149138630987990425796230843690483328823041472025502721542949197715929411507460276571360120080665986158013521111018991075990593335215170630706385939845822703504902118450791016366981888093783263101804898590682994992299313433797806459
#n2 = 120350182221938515685928698783338391001279851369413526854728776370469593827388711405281841008096858299765135030179205008355937288271884145775278293804337180803702477324752810541246790425018007850472954709880458010341295760928999231026562722796506317052796134360791573687724528702666725368916765343285856006451

p_ = getPrime(512)
q_ = getPrime(512)
n3 = p_*q_
e2 = 17
e3 = 65537
m2 = bytes_to_long(my_cipher)
c3 = pow(m2,e2,n3)
c4 = pow(m2,e3,n3)
print(c3)
print(c4)
print(n3)
# c3 = 20243557018856670582204546532039571584584755429147148598923859567966938900719018190590227736690139184612856753179093441985053308131308804008698919889429712280517350172903893096517402655437572862029678873930502278626455643971068123059059962312473772246431277782656586351602034703289508258600607340959581014579
# c4 = 4727210036695913166794799869404874632381115236854300426131825751422196887405905954506090278668809680257132467790289514140831579490118406416957952925302470407004486103504930355538042091456319955515001068046028059177512465847170473487669716791439096050471850555501417041290746204549493913779698897561594386264
# n3 = 47904653258103089252220523582218611679167664934907617319407594881277589667479682731404956100777311649591597482812812549860794667440892599668496600809843509094886724326827702857339400198938191052724882665519383464619086148547874609680640705714996131157901566752487669549358699823584859366123442127411777744669
